{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zoro\\\\Desktop\\\\portfolio\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProjectCard from '../components/ProjectCard';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Step 1: Fetch and save GitHub projects\n    axios.get('http://localhost:8000/projects/github/').then(() => {\n      // Step 2: Fetch the updated projects list\n      axios.get('http://localhost:8000/projects/').then(response => {\n        setProjects(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching projects:', error);\n        setLoading(false);\n      });\n    }).catch(error => {\n      console.error('Error fetching GitHub projects:', error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-grid\",\n      children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No projects found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"OQ1VoVBkBYQ0DtEeE9la9LZgEb0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProjectCard","jsxDEV","_jsxDEV","Home","_s","projects","setProjects","loading","setLoading","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","project","id","_c","$RefreshReg$"],"sources":["C:/Users/zoro/Desktop/portfolio/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport '../App.css';\r\n\r\nconst Home = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Step 1: Fetch and save GitHub projects\r\n    axios\r\n      .get('http://localhost:8000/projects/github/')\r\n      .then(() => {\r\n        // Step 2: Fetch the updated projects list\r\n        axios\r\n          .get('http://localhost:8000/projects/')\r\n          .then((response) => {\r\n            setProjects(response.data);\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error fetching projects:', error);\r\n            setLoading(false);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching GitHub projects:', error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <h2>My Projects</h2>\r\n      <div className=\"project-grid\">\r\n        {projects.length > 0 ? (\r\n          projects.map((project) => (\r\n            <ProjectCard key={project.id} project={project} />\r\n          ))\r\n        ) : (\r\n          <p>No projects found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFU,GAAG,CAAC,wCAAwC,CAAC,CAC7CC,IAAI,CAAC,MAAM;MACV;MACAX,KAAK,CACFU,GAAG,CAAC,iCAAiC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;QAClBL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC;QAC1BJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDN,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE,oBAAOL,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEzC,oBACElB,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAL,QAAA,gBACnBd,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAL,QAAA,EAC1BX,QAAQ,CAACiB,MAAM,GAAG,CAAC,GAClBjB,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBACnBtB,OAAA,CAACF,WAAW;QAAkBwB,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD,CAAC,gBAEFlB,OAAA;QAAAc,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACzB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA3CID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}